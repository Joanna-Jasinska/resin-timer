{"mappings":"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","sources":["src/js/04-resinTimer.js"],"sourcesContent":["import 'flatpickr/dist/flatpickr.min.css';\n// import flatpickr from 'flatpickr';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst RESIN_MS = 8 * 60 * 1000;\nconst RESIN_MS_DAILY_DELAY = 5 * 60 * 1000 + 5 * 1000; //-5min +5sec\nconst DATE_DISPLAY_OPTIONS = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric',\n}; //weekday: 'long',\n\nconst resinInput = document.querySelector('#resin');\nconst resin = () => parseInt(resinInput.value) || 0;\n\nconst saving = () => document.querySelector('#save').checked;\n\nconst next20 = document.querySelector('[data-20]');\nconst next40 = document.querySelector('[data-40]');\nconst next60 = document.querySelector('[data-60]');\nconst next120 = document.querySelector('[data-120]');\nconst fullAt = document.querySelector('[data-date]');\nconst add20 = document.querySelector('[data-plus]');\nconst remove20 = document.querySelector('[data-minus]');\nconst warningFull = document.querySelector('[data-warningFull]');\nconst saveCheckbox = document.querySelector('#save');\nconst title = document.querySelector('title');\n\nlet initNow = 0; //Number(new Date() - RESIN_MS_DAILY_DELAY); //.getTime();\n\nlet lastData = {\n  date: Number(new Date() - RESIN_MS_DAILY_DELAY),\n  resin: resin(),\n  saving: true,\n};\nconst saveData = () => {\n  setIcon();\n  if (saving()) {\n    const settings = {\n      date: Number(new Date() - RESIN_MS_DAILY_DELAY),\n      resin: resin(),\n      saving: true,\n    };\n    console.log(settings);\n    localStorage.setItem('save', JSON.stringify(settings));\n    Notify.success('Saving data.');\n  }\n};\nconst updateData = () => {\n  if (!lastData) {\n    lastData = {\n      date: Number(new Date() - RESIN_MS_DAILY_DELAY),\n      resin: resin(),\n      saving: false,\n    };\n  }\n  initNow = Number(new Date() - RESIN_MS_DAILY_DELAY);\n  const betweenSavedTime = initNow - lastData.date;\n  const addedResin = Math.floor(betweenSavedTime / RESIN_MS) - 0;\n  const newResin = 0 + Number(lastData.resin + addedResin);\n  // Notify.failure(\n  //   `resin previously:${lastData.resin} resin to be added: ${addedResin} newResin =${newResin}`\n  // );\n  if (lastData.resin != newResin) {\n    Notify.warning(\n      'Updated ' +\n        lastData.resin +\n        ' -> ' +\n        newResin +\n        ' (time= ' +\n        betweenSavedTime +\n        ' )'\n    );\n    // Notify.warning('Updated');\n  }\n  resinInput.value = newResin;\n};\nconst loadData = () => {\n  lastData = JSON.parse(localStorage.getItem('save'));\n  updateData();\n  document.querySelector('#save').checked = JSON.parse(lastData.saving);\n  // resinInput.value = lastData.resin;\n  if (saving()) Notify.warning('Data loaded.');\n};\nloadData();\nconst onSaveCheckbox = () => {\n  if (saving()) {\n    saveData();\n  } else {\n    Notify.failure('Deleting data from local storage.');\n    lastData = {\n      date: Number(new Date() - RESIN_MS_DAILY_DELAY),\n      resin: resin(),\n      saving: false,\n    };\n    localStorage.setItem('save', '');\n  }\n};\n\nlet timer = null;\nlet singleResinTimer = null;\nlet SRTInterval = 0;\n\nconst SRTTick = () => {\n  console.log('tick: got one resin more');\n  resinInput.value = Number(resin()) + 1;\n  saveData();\n  Notify.info(`Resin increased to ${resinInput.value}`);\n};\n\nconst getMSToNearestResin = () => {\n  const now = new Date();\n  const todayMS =\n    now.getHours() * 60 * 60 * 1000 +\n    now.getMinutes() * 60 * 1000 +\n    now.getSeconds() * 1000 +\n    now.getMilliseconds() -\n    RESIN_MS_DAILY_DELAY;\n\n  const nextRMS = RESIN_MS - (todayMS % RESIN_MS);\n  const nextRMins = Math.floor(nextRMS / 60000) - 0;\n  const nextRSecs = Math.floor((nextRMS - nextRMins * 60 * 1000) / 1000) - 0;\n  Notify.info(`Resin incease in ${nextRMins}m  ${nextRSecs - 1}s`);\n  return nextRMS;\n};\n\nfunction objectifyMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = String(Math.floor(ms / day)).padStart(2, 0);\n  const hours = String(Math.floor((ms % day) / hour)).padStart(2, 0);\n  const minutes = String(Math.floor(((ms % day) % hour) / minute)).padStart(\n    2,\n    0\n  );\n  const seconds = String(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  ).padStart(2, 0);\n  return { days, hours, minutes, seconds };\n}\nconst resinToMSec = r => r * RESIN_MS + initNow;\nconst getGoalDateByResin = (resin, neededResin) => {\n  const diff = neededResin - (resin % neededResin);\n  return resinToMSec(diff);\n};\nconst DateObjToStr = (d, format = 'date') => {\n  // formats: 'date' or 'countdown'\n  // date time when finish / hours minutes to the end\n  return format == 'date'\n    ? `date `\n    : `${d.hours}h  ${d.minutes}min ${d.seconds}s`;\n};\nconst dateToStr = d => {\n  // const month\n  return ``;\n};\nconst updateR = () => {\n  const filledMS = getGoalDateByResin(resin(), 160);\n  const filledDate = new Date(filledMS);\n  let timeDifference = Number(filledMS) - Number(new Date());\n  let countdown = objectifyMs(timeDifference);\n  next20.innerHTML = DateObjToStr(\n    objectifyMs(Number(getGoalDateByResin(resin(), 20)) - Number(new Date())),\n    'countdown'\n  );\n  next40.innerHTML = DateObjToStr(\n    objectifyMs(Number(getGoalDateByResin(resin(), 40)) - Number(new Date())),\n    'countdown'\n  );\n  const d60 = new Date(\n    Number(getGoalDateByResin(resin(), 60))\n  ).toLocaleDateString('pl-PL', DATE_DISPLAY_OPTIONS);\n  next60.innerHTML = d60;\n  const d120 = new Date(\n    Number(getGoalDateByResin(resin(), 120))\n  ).toLocaleDateString('pl-PL', DATE_DISPLAY_OPTIONS);\n  next120.innerHTML = d120;\n  fullAt.innerHTML = new Date(\n    Number(getGoalDateByResin(resin(), 160))\n  ).toLocaleDateString('pl-PL', DATE_DISPLAY_OPTIONS);\n  // Notify.failure(filledDate.getHours());\n  warningFull.innerHTML =\n    Number(filledDate.getDay()) == Number(new Date().getDay())\n      ? ' Dzisiaj'\n      : filledDate.getHours() < 9\n      ? 'Rano'\n      : ' ';\n  // daysDisplay.innerHTML = countdown.days;\n  // hoursDisplay.innerHTML = countdown.hours;\n  // minutesDisplay.innerHTML = countdown.minutes;\n  // secondsDisplay.innerHTML = countdown.seconds;\n};\nconst setRTimer = () => {\n  updateR();\n  timer = setInterval(updateR, 1000);\n};\nconst onInputResinChange = () => {\n  saveData();\n};\nfunction changeFavicon(text) {\n  const canvas = document.createElement('canvas');\n  canvas.height = 64;\n  canvas.width = 64;\n  const ctx = canvas.getContext('2d');\n  ctx.fillStyle = '#99ccff';\n  ctx.font = '124px serif'; //'64px serif'\n  ctx.fillText('●', -10, 70); //🌘🌙⚸☾\n  ctx.fillStyle = 'white';\n  ctx.font = '102px serif'; //'64px serif'\n  ctx.fillText('●', 8, 61); //🌘🌙⚸☾\n  ctx.fillStyle = '#ffffe6';\n  ctx.font = '64px serif'; //'64px serif'\n  // ctx.fillText(text, -3, 47);\n  ctx.fillText(text, 4, 54);\n  ctx.fillStyle = 'black';\n  ctx.font = '64px serif'; //'64px serif'\n  ctx.fillText(text, 0, 50);\n  ctx.fillText(text, 1, 51);\n\n  const link = document.createElement('link');\n  const oldLinks = document.querySelectorAll('link[rel=\"icon\"]');\n  oldLinks.forEach(e => e.parentNode.removeChild(e));\n  link.id = 'dynamic-favicon';\n  link.rel = 'icon';\n  link.href = canvas.toDataURL();\n  document.head.appendChild(link);\n}\nconst setIcon = () => {\n  title.innerHTML = resin();\n  // const icon = document.querySelector('#icon');\n  const r = resin();\n  changeFavicon(r);\n  // if (r >= 160) {\n  //   icon.href = './icons/resinlaser.ico';\n  //   console.log(icon);\n  //   return;\n  // }\n  // if (r >= 60) {\n  //   icon.href = './icons/resin60.ico';\n  //   console.log(icon);\n  //   return;\n  // }\n  // if (r >= 40) {\n  //   icon.href = './icons/resin40.ico';\n  //   console.log(icon);\n  //   return;\n  // }\n  // if (r >= 20) {\n  //   icon.href = './icons/resin20.ico';\n  //   console.log(icon);\n  //   return;\n  // }\n  // if (r >= 10) {\n  //   icon.href = './icons/resin10.ico';\n  //   console.log(icon);\n  //   return;\n  // }\n  // icon.href = './icons/resin0.ico';\n  // console.log(icon);\n};\n// --------------------------------------\n// --------------------------------------\nadd20.addEventListener('click', () => {\n  if (resin() + 20 <= 160) {\n    resinInput.value = Number(resinInput.value) + 20;\n    saveData();\n  } else {\n    resinInput.value = 160;\n  }\n});\nremove20.addEventListener('click', () => {\n  if (resin() - 20 >= 0) {\n    resinInput.value = Number(resinInput.value) - 20;\n    saveData();\n  } else {\n    resinInput.value = 0;\n  }\n});\nresinInput.addEventListener('change', onInputResinChange);\nsaveCheckbox.addEventListener('change', onSaveCheckbox);\nlet countdownDate = getGoalDateByResin(resin(), 160); // =new Date();\nsetRTimer();\n// SRTInterval=getMSToNearestResin();\nsingleResinTimer = setInterval(() => {\n  // SRTInterval=RESIN_MS;\n  clearInterval(singleResinTimer);\n  SRTTick();\n  singleResinTimer = setInterval(SRTTick, RESIN_MS);\n}, getMSToNearestResin());\nsetIcon();\n// --------------------------------------\n// --------------------------------------\n"],"names":["$43df8893b4fa5184$var$DATE_DISPLAY_OPTIONS","year","month","day","hour","minute","$43df8893b4fa5184$var$resinInput","document","querySelector","$43df8893b4fa5184$var$resin","parseInt","value","$43df8893b4fa5184$var$saving","checked","$43df8893b4fa5184$var$next20","$43df8893b4fa5184$var$next40","$43df8893b4fa5184$var$next60","$43df8893b4fa5184$var$next120","$43df8893b4fa5184$var$fullAt","$43df8893b4fa5184$var$add20","$43df8893b4fa5184$var$remove20","$43df8893b4fa5184$var$warningFull","$43df8893b4fa5184$var$saveCheckbox","$43df8893b4fa5184$var$title","$43df8893b4fa5184$var$initNow","$43df8893b4fa5184$var$lastData","date","Number","Date","resin","saving","$43df8893b4fa5184$var$saveData","$43df8893b4fa5184$var$setIcon","settings","console","log","localStorage","setItem","JSON","stringify","$iQIUW","Notify","success","parse","getItem","betweenSavedTime","addedResin","Math","floor","newResin","warning","$43df8893b4fa5184$var$updateData","$43df8893b4fa5184$var$timer","$43df8893b4fa5184$var$singleResinTimer","$43df8893b4fa5184$var$SRTTick","info","$43df8893b4fa5184$var$objectifyMs","ms","second","String","padStart","$43df8893b4fa5184$var$getGoalDateByResin","resin1","neededResin","$43df8893b4fa5184$var$DateObjToStr","d","format","hours","minutes","seconds","$43df8893b4fa5184$var$updateR","filledMS","filledDate","innerHTML","d60","toLocaleDateString","d120","getDay","getHours","text","canvas","createElement","height","width","ctx","getContext","fillStyle","font","fillText","link","querySelectorAll","forEach","e","parentNode","removeChild","id","rel","href","toDataURL","head","appendChild","$43df8893b4fa5184$var$changeFavicon","addEventListener","failure","setInterval","clearInterval","now","nextRMS","getMinutes","getSeconds","getMilliseconds","nextRMins","nextRSecs","$43df8893b4fa5184$var$getMSToNearestResin"],"version":3,"file":"04-resinTimer.59991ac0.js.map"}