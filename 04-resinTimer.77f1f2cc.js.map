{"mappings":"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","sources":["src/js/04-resinTimer.js"],"sourcesContent":["import 'flatpickr/dist/flatpickr.min.css';\n// import flatpickr from 'flatpickr';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst RESIN_MS = 8 * 60 * 1000;\nconst RESIN_MS_DAILY_DELAY = 5 * 60 * 1000; //-5min\nconst DATE_DISPLAY_OPTIONS = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric',\n}; //weekday: 'long',\n\nconst resinInput = document.querySelector('#resin');\nconst resin = () => parseInt(resinInput.value) || 0;\n\nconst saving = () => document.querySelector('#save').checked;\n\nconst next20 = document.querySelector('[data-20]');\nconst next40 = document.querySelector('[data-40]');\nconst next60 = document.querySelector('[data-60]');\nconst fullAt = document.querySelector('[data-date]');\nconst add20 = document.querySelector('[data-plus]');\nconst remove20 = document.querySelector('[data-minus]');\nconst warningFull = document.querySelector('[data-warningFull]');\nconst saveCheckbox = document.querySelector('#save');\n\nlet initNow = 0; //Number(new Date() - RESIN_MS_DAILY_DELAY); //.getTime();\n\nlet lastData = {\n  date: Number(new Date() - RESIN_MS_DAILY_DELAY),\n  resin: resin(),\n  saving: true,\n};\nconst saveData = () => {\n  if (saving()) {\n    const settings = {\n      date: Number(new Date() - RESIN_MS_DAILY_DELAY),\n      resin: resin(),\n      saving: true,\n    };\n    console.log(settings);\n    localStorage.setItem('save', JSON.stringify(settings));\n    Notify.success('Saving data.');\n  }\n};\nconst updateData = () => {\n  if (!lastData) {\n    lastData = {\n      date: Number(new Date() - RESIN_MS_DAILY_DELAY),\n      resin: resin(),\n      saving: false,\n    };\n  }\n  initNow = Number(new Date() - RESIN_MS_DAILY_DELAY);\n  const betweenSavedTime = initNow - lastData.date;\n  const addedResin = Number(betweenSavedTime / RESIN_MS).toFixed(0) - 0;\n  const newResin = 0 + Number(lastData.resin + addedResin);\n  // Notify.failure(\n  //   `resin previously:${lastData.resin} resin to be added: ${addedResin} newResin =${newResin}`\n  // );\n  if (lastData.resin != newResin) {\n    Notify.warning(\n      'Updated ' +\n        lastData.resin +\n        ' -> ' +\n        newResin +\n        ' (time= ' +\n        betweenSavedTime +\n        ' )'\n    );\n    // Notify.warning('Updated');\n  }\n  resinInput.value = newResin;\n};\nconst loadData = () => {\n  lastData = JSON.parse(localStorage.getItem('save'));\n  updateData();\n  document.querySelector('#save').checked = JSON.parse(lastData.saving);\n  // resinInput.value = lastData.resin;\n  if (saving()) Notify.warning('Data loaded.');\n};\nloadData();\nconst onSaveCheckbox = () => {\n  if (saving()) {\n    saveData();\n  } else {\n    Notify.failure('Deleting data from local storage.');\n    lastData = {\n      date: Number(new Date() - RESIN_MS_DAILY_DELAY),\n      resin: resin(),\n      saving: false,\n    };\n    localStorage.setItem('save', '');\n  }\n};\n\nlet timer = null;\nlet singleResinTimer = null;\nlet SRTInterval = 0;\n\nconst SRTTick = () => {\n  console.log('tick: got one resin more');\n  resinInput.value = Number(resinInput.value) + 1;\n  saveData();\n  Notify.info(`Rasin increased to ${resinInput.value}`);\n};\n\nconst getMSToNearestResin = () => {\n  const now = new Date();\n  const todayMS =\n    now.getHours() * 60 * 60 * 1000 +\n    now.getMinutes() * 60 * 1000 +\n    now.getSeconds() * 1000 +\n    now.getMilliseconds() -\n    RESIN_MS_DAILY_DELAY;\n\n  const nextRMS = RESIN_MS - (todayMS % RESIN_MS);\n  Notify.info(\n    `Resin incease in ${(nextRMS / 60000).toFixed(0)}m  ${\n      ((nextRMS % 60000) / 1000).toFixed(0) - 1\n    }s`\n  );\n  return RESIN_MS - (todayMS % RESIN_MS);\n};\n\nfunction objectifyMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = String(Math.floor(ms / day)).padStart(2, 0);\n  const hours = String(Math.floor((ms % day) / hour)).padStart(2, 0);\n  const minutes = String(Math.floor(((ms % day) % hour) / minute)).padStart(\n    2,\n    0\n  );\n  const seconds = String(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  ).padStart(2, 0);\n  return { days, hours, minutes, seconds };\n}\nconst resinToMSec = r => r * RESIN_MS + initNow;\nconst getGoalDateByResin = (resin, neededResin) => {\n  const diff = neededResin - (resin % neededResin);\n  return resinToMSec(diff);\n};\nconst DateObjToStr = (d, format = 'date') => {\n  // formats: 'date' or 'countdown'\n  // date time when finish / hours minutes to the end\n  return format == 'date'\n    ? `date `\n    : `${d.hours}h  ${d.minutes}min ${d.seconds}s`;\n};\nconst dateToStr = d => {\n  // const month\n  return ``;\n};\nconst updateR = () => {\n  countdownDate = getGoalDateByResin(resin(), 160);\n  let timeDifference = Number(countdownDate) - Number(new Date());\n  let countdown = objectifyMs(timeDifference);\n  next20.innerHTML = DateObjToStr(\n    objectifyMs(Number(getGoalDateByResin(resin(), 20)) - Number(new Date())),\n    'countdown'\n  );\n  next40.innerHTML = DateObjToStr(\n    objectifyMs(Number(getGoalDateByResin(resin(), 40)) - Number(new Date())),\n    'countdown'\n  );\n  const d60 = new Date(\n    Number(getGoalDateByResin(resin(), 60))\n  ).toLocaleDateString('pl-PL', DATE_DISPLAY_OPTIONS);\n  next60.innerHTML = d60;\n  fullAt.innerHTML = new Date(\n    Number(getGoalDateByResin(resin(), 160))\n  ).toLocaleDateString('pl-PL', DATE_DISPLAY_OPTIONS);\n  warningFull.innerHTML =\n    Number(new Date(getGoalDateByResin(resin(), 160)).getDay()) ==\n    Number(new Date().getDay())\n      ? ' Dzisiaj'\n      : ' ';\n  // daysDisplay.innerHTML = countdown.days;\n  // hoursDisplay.innerHTML = countdown.hours;\n  // minutesDisplay.innerHTML = countdown.minutes;\n  // secondsDisplay.innerHTML = countdown.seconds;\n};\nconst setRTimer = () => {\n  updateR();\n  timer = setInterval(updateR, 1000);\n};\nconst onInputResinChange = () => {\n  saveData();\n};\n// --------------------------------------\n// --------------------------------------\nadd20.addEventListener('click', () => {\n  if (resin() + 20 <= 160) {\n    resinInput.value = Number(resinInput.value) + 20;\n    saveData();\n  } else {\n    resinInput.value = 160;\n  }\n});\nremove20.addEventListener('click', () => {\n  if (resin() - 20 >= 0) {\n    resinInput.value = Number(resinInput.value) - 20;\n    saveData();\n  } else {\n    resinInput.value = 0;\n  }\n});\nresinInput.addEventListener('change', onInputResinChange);\nsaveCheckbox.addEventListener('change', onSaveCheckbox);\nlet countdownDate = getGoalDateByResin(resin(), 160); // =new Date();\nsetRTimer();\n// SRTInterval=getMSToNearestResin();\nsingleResinTimer = setInterval(() => {\n  // SRTInterval=RESIN_MS;\n  clearInterval(singleResinTimer);\n  SRTTick();\n  singleResinTimer = setInterval(SRTTick, RESIN_MS);\n}, getMSToNearestResin());\n// --------------------------------------\n// --------------------------------------\n"],"names":["$43df8893b4fa5184$var$DATE_DISPLAY_OPTIONS","year","month","day","hour","minute","$43df8893b4fa5184$var$resinInput","document","querySelector","$43df8893b4fa5184$var$resin","parseInt","value","$43df8893b4fa5184$var$saving","checked","$43df8893b4fa5184$var$next20","$43df8893b4fa5184$var$next40","$43df8893b4fa5184$var$next60","$43df8893b4fa5184$var$fullAt","$43df8893b4fa5184$var$add20","$43df8893b4fa5184$var$remove20","$43df8893b4fa5184$var$warningFull","$43df8893b4fa5184$var$saveCheckbox","$43df8893b4fa5184$var$initNow","$43df8893b4fa5184$var$lastData","date","Number","Date","resin","saving","$43df8893b4fa5184$var$saveData","settings","console","log","localStorage","setItem","JSON","stringify","$iQIUW","Notify","success","parse","getItem","betweenSavedTime","addedResin","toFixed","newResin","warning","$43df8893b4fa5184$var$updateData","$43df8893b4fa5184$var$timer","$43df8893b4fa5184$var$singleResinTimer","$43df8893b4fa5184$var$SRTTick","info","$43df8893b4fa5184$var$objectifyMs","ms","second","String","Math","floor","padStart","$43df8893b4fa5184$var$getGoalDateByResin","resin1","neededResin","$43df8893b4fa5184$var$DateObjToStr","d","format","hours","minutes","seconds","$43df8893b4fa5184$var$updateR","$43df8893b4fa5184$var$countdownDate","innerHTML","d60","toLocaleDateString","getDay","addEventListener","failure","setInterval","clearInterval","now","todayMS","getHours","getMinutes","getSeconds","getMilliseconds","nextRMS","$43df8893b4fa5184$var$getMSToNearestResin"],"version":3,"file":"04-resinTimer.77f1f2cc.js.map"}