{"mappings":"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","sources":["src/js/04-resinTimer.js"],"sourcesContent":["import 'flatpickr/dist/flatpickr.min.css';\n// import flatpickr from 'flatpickr';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst RESIN_MS = 8 * 60 * 1000;\nconst RESIN_MS_DAILY_DELAY = 5 * 60 * 1000; //-5min\nconst DATE_DISPLAY_OPTIONS = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric',\n}; //weekday: 'long',\n\nconst resinInput = document.querySelector('#resin');\nconst resin = () => parseInt(resinInput.value) || 0;\n\nconst saving = () => document.querySelector('#save').checked;\n\nconst next20 = document.querySelector('[data-20]');\nconst next40 = document.querySelector('[data-40]');\nconst next60 = document.querySelector('[data-60]');\nconst fullAt = document.querySelector('[data-date]');\nconst add20 = document.querySelector('[data-plus]');\nconst remove20 = document.querySelector('[data-minus]');\nconst warningFull = document.querySelector('[data-warningFull]');\nconst saveCheckbox = document.querySelector('#save');\n\nlet initNow = 0; //Number(new Date() - RESIN_MS_DAILY_DELAY); //.getTime();\n\nlet lastData = {\n  date: Number(new Date() - RESIN_MS_DAILY_DELAY),\n  resin: resin(),\n  saving: true,\n};\nconst saveData = () => {\n  if (saving()) {\n    const settings = {\n      date: Number(new Date() - RESIN_MS_DAILY_DELAY),\n      resin: resin(),\n      saving: true,\n    };\n    console.log(settings);\n    localStorage.setItem('save', JSON.stringify(settings));\n    Notify.success('Saving data.');\n  }\n};\nconst updateData = () => {\n  if (!lastData) {\n    lastData = {\n      date: Number(new Date() - RESIN_MS_DAILY_DELAY),\n      resin: resin(),\n      saving: false,\n    };\n  }\n  initNow = Number(new Date() - RESIN_MS_DAILY_DELAY);\n  const betweenSavedTime = initNow - lastData.date;\n  const addedResin = Number(betweenSavedTime / RESIN_MS).toFixed(0) - 0;\n  const newResin = 0 + Number(lastData.resin + addedResin);\n  // Notify.failure(\n  //   `resin previously:${lastData.resin} resin to be added: ${addedResin} newResin =${newResin}`\n  // );\n  if (lastData.resin != newResin) {\n    Notify.warning(\n      'Updated ' +\n        lastData.resin +\n        ' -> ' +\n        newResin +\n        ' (time= ' +\n        betweenSavedTime +\n        ' )'\n    );\n    // Notify.warning('Updated');\n  }\n  resinInput.value = newResin;\n};\nconst loadData = () => {\n  lastData = JSON.parse(localStorage.getItem('save'));\n  updateData();\n  document.querySelector('#save').checked = JSON.parse(lastData.saving);\n  // resinInput.value = lastData.resin;\n  if (saving()) Notify.warning('Data loaded.');\n};\nloadData();\nconst onSaveCheckbox = () => {\n  if (saving()) {\n    saveData();\n  } else {\n    Notify.failure('Deleting data from local storage.');\n    lastData = {\n      date: Number(new Date() - RESIN_MS_DAILY_DELAY),\n      resin: resin(),\n      saving: false,\n    };\n    localStorage.setItem('save', '');\n  }\n};\n\nlet timer = null;\nlet singleResinTimer = null;\nlet SRTInterval = 0;\n\nconst SRTTick = () => {\n  console.log('tick: got one resin more');\n  resinInput.value = Number(resinInput.value) + 1;\n  saveData();\n  Notify.info(`Rasin increased to ${resinInput.value}`);\n};\n\nconst getMSToNearestResin = () => {\n  const now = new Date();\n  const todayMS =\n    now.getHours() * 60 * 60 * 1000 +\n    now.getMinutes() * 60 * 1000 +\n    now.getSeconds() * 1000 +\n    now.getMilliseconds() -\n    RESIN_MS_DAILY_DELAY;\n\n  const nextRMS = RESIN_MS - (todayMS % RESIN_MS);\n  Notify.info(\n    `Resin incease in ${(nextRMS / 60000).toFixed(0)}m  ${\n      ((nextRMS % 60000) / 1000).toFixed(0) - 1\n    }s`\n  );\n  return RESIN_MS - (todayMS % RESIN_MS);\n};\n\nfunction objectifyMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = String(Math.floor(ms / day)).padStart(2, 0);\n  const hours = String(Math.floor((ms % day) / hour)).padStart(2, 0);\n  const minutes = String(Math.floor(((ms % day) % hour) / minute)).padStart(\n    2,\n    0\n  );\n  const seconds = String(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  ).padStart(2, 0);\n  return { days, hours, minutes, seconds };\n}\nconst resinToMSec = r => r * RESIN_MS + initNow;\nconst getGoalDateByResin = (resin, neededResin) => {\n  const diff = neededResin - (resin % neededResin);\n  return resinToMSec(diff);\n};\nconst DateObjToStr = (d, format = 'date') => {\n  // formats: 'date' or 'countdown'\n  // date time when finish / hours minutes to the end\n  return format == 'date'\n    ? `date `\n    : `${d.hours}h  ${d.minutes}min ${d.seconds}s`;\n};\nconst dateToStr = d => {\n  // const month\n  return ``;\n};\nconst updateR = () => {\n  const filledMS = getGoalDateByResin(resin(), 160);\n  const filledDate = new Date(filledMS);\n  let timeDifference = Number(filledMS) - Number(new Date());\n  let countdown = objectifyMs(timeDifference);\n  next20.innerHTML = DateObjToStr(\n    objectifyMs(Number(getGoalDateByResin(resin(), 20)) - Number(new Date())),\n    'countdown'\n  );\n  next40.innerHTML = DateObjToStr(\n    objectifyMs(Number(getGoalDateByResin(resin(), 40)) - Number(new Date())),\n    'countdown'\n  );\n  const d60 = new Date(\n    Number(getGoalDateByResin(resin(), 60))\n  ).toLocaleDateString('pl-PL', DATE_DISPLAY_OPTIONS);\n  next60.innerHTML = d60;\n  fullAt.innerHTML = new Date(\n    Number(getGoalDateByResin(resin(), 160))\n  ).toLocaleDateString('pl-PL', DATE_DISPLAY_OPTIONS);\n  // Notify.failure(filledDate.getHours());\n  warningFull.innerHTML =\n    Number(filledDate.getDay()) == Number(new Date().getDay())\n      ? ' Dzisiaj'\n      : filledDate.getHours() < 9\n      ? 'Rano'\n      : ' ';\n  // daysDisplay.innerHTML = countdown.days;\n  // hoursDisplay.innerHTML = countdown.hours;\n  // minutesDisplay.innerHTML = countdown.minutes;\n  // secondsDisplay.innerHTML = countdown.seconds;\n};\nconst setRTimer = () => {\n  updateR();\n  timer = setInterval(updateR, 1000);\n};\nconst onInputResinChange = () => {\n  saveData();\n};\n// --------------------------------------\n// --------------------------------------\nadd20.addEventListener('click', () => {\n  if (resin() + 20 <= 160) {\n    resinInput.value = Number(resinInput.value) + 20;\n    saveData();\n  } else {\n    resinInput.value = 160;\n  }\n});\nremove20.addEventListener('click', () => {\n  if (resin() - 20 >= 0) {\n    resinInput.value = Number(resinInput.value) - 20;\n    saveData();\n  } else {\n    resinInput.value = 0;\n  }\n});\nresinInput.addEventListener('change', onInputResinChange);\nsaveCheckbox.addEventListener('change', onSaveCheckbox);\nlet countdownDate = getGoalDateByResin(resin(), 160); // =new Date();\nsetRTimer();\n// SRTInterval=getMSToNearestResin();\nsingleResinTimer = setInterval(() => {\n  // SRTInterval=RESIN_MS;\n  clearInterval(singleResinTimer);\n  SRTTick();\n  singleResinTimer = setInterval(SRTTick, RESIN_MS);\n}, getMSToNearestResin());\n// --------------------------------------\n// --------------------------------------\n"],"names":["$3da008038f38d83c$var$RESIN_MS","$3da008038f38d83c$var$RESIN_MS_DAILY_DELAY","$3da008038f38d83c$var$DATE_DISPLAY_OPTIONS","year","month","day","hour","minute","$3da008038f38d83c$var$resinInput","document","querySelector","$3da008038f38d83c$var$resin","parseInt","value","$3da008038f38d83c$var$saving","checked","$3da008038f38d83c$var$next20","$3da008038f38d83c$var$next40","$3da008038f38d83c$var$next60","$3da008038f38d83c$var$fullAt","$3da008038f38d83c$var$add20","$3da008038f38d83c$var$remove20","$3da008038f38d83c$var$warningFull","$3da008038f38d83c$var$saveCheckbox","$3da008038f38d83c$var$initNow","$3da008038f38d83c$var$lastData","date","Number","Date","resin","saving","$3da008038f38d83c$var$saveData","settings","console","log","localStorage","setItem","JSON","stringify","$h6c0i","Notify","success","parse","getItem","betweenSavedTime","addedResin","toFixed","newResin","warning","$3da008038f38d83c$var$updateData","$3da008038f38d83c$var$singleResinTimer","$3da008038f38d83c$var$SRTTick","info","concat","$3da008038f38d83c$var$objectifyMs","ms","second","days","String","Math","floor","padStart","hours","minutes","seconds","$3da008038f38d83c$var$getGoalDateByResin","resin1","neededResin","$3da008038f38d83c$var$DateObjToStr","d","format","arguments","length","$3da008038f38d83c$var$updateR","filledMS","filledDate","innerHTML","d60","toLocaleDateString","getDay","getHours","addEventListener","failure","now","todayMS","nextRMS","setInterval","clearInterval","getMinutes","getSeconds","getMilliseconds"],"version":3,"file":"04-resinTimer.c9a6f0b0.js.map"}